# Somnia Gas Profiler Environment Configuration
# Copy this file to .env and fill in your actual values

# ================================
# REQUIRED CONFIGURATION
# ================================

# Private key for deploying contracts and running transactions
# Generate a test wallet private key (NOT your main wallet!)
PRIVATE_KEY=0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef

# Somnia Testnet RPC endpoint
RPC_URL=https://dream-rpc.somnia.network

# ================================
# IO.NET INTELLIGENCE API
# ================================

# IO.net Intelligence API key for AI-powered gas analysis
# Get your API key from https://io.net
# This enables natural language analysis and optimization recommendations
IOINTELLIGENCE_API_KEY=your_io_net_api_key_here

# ================================
# COMPILATION TOOLS (Optional)
# ================================

# Foundry configuration for Solidity compilation
# Foundry is the preferred compilation tool
FOUNDRY_PATH=/path/to/foundry
# FOUNDRY_PATH=forge  # Use this if foundry is in your PATH

# Hardhat configuration (fallback compiler)
# HARDHAT_PATH=npx hardhat

# Default Solidity optimizer settings
DEFAULT_OPTIMIZATION_RUNS=200
DEFAULT_SOLC_VERSION=0.8.19

# ================================
# ANALYSIS OPTIONS (Optional)
# ================================

# Default number of profiling runs per function
DEFAULT_PROFILING_RUNS=1

# Maximum functions to profile in quick-analyze mode
QUICK_ANALYZE_MAX_FUNCTIONS=10

# Enable/disable automatic CSV export
AUTO_EXPORT_CSV=true

# ================================
# LEGACY SUPPORT (Optional)
# ================================

# OpenAI API Key for additional AI summaries (legacy feature)
# Only needed if you want to use OpenAI instead of IO.net
# OPENAI_API_KEY=your_openai_key_here

# ================================
# DEVELOPMENT OPTIONS (Optional)
# ================================

# Enable debug logging
# DEBUG_MODE=false

# Temporary directory for compilation
# TEMP_DIR=./temp

# Maximum compilation timeout (seconds)
# COMPILATION_TIMEOUT=60